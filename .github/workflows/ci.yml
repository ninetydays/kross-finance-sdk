name: CI
on:
  pull_request:
    types: [opened, reopened, ready_for_review, synchronize]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@ninetydays'
          always-auth: true
      - name: Decrypt secret to create .env.$env file
        run: ./secret.sh dev decrypt
        env:
          SECRET_PASSPHRASE: ${{ secrets.SECRET_PASSPHRASE }}
      - name: Rename .env.$env to .env
        run: mv .env.dev .env
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependecncies
        run: yarn install
      - name: Run lint
        run: yarn lint .

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "YARN_CACHE_PATH=$(yarn cache dir)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ${{ env.YARN_CACHE_PATH }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependecncies
        run: yarn install
      - name: Run Test
        run: yarn test
